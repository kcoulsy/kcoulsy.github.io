{"version":3,"sources":["types.ts","constants/pageRoutes.ts","contexts/cart.tsx","components/Icon.tsx","components/ProductCard.tsx","components/Filter.tsx","pages/Home.tsx","actions.ts","components/CartProduct.tsx","pages/Cart.tsx","AppRouter.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["ProductColor","PATH_CART","CartActionType","initialCartState","items","totalQuantity","totalPrice","CartStateContext","createContext","CartDispatchContext","cartReducer","state","action","type","AddToCart","existingItem","find","item","product","id","payload","oldQty","quantity","filter","UpdateQuantity","map","RemoveFromCart","IconType","useCartStateContext","useContext","useCartDispatchContext","CartContextProvider","children","useReducer","dispatch","reduce","acc","curr","price","stateContextValue","Math","round","Provider","value","ProductCard","productInCart","cartItem","qtyInCart","data-test","className","name","src","img","alt","onClick","ev","preventDefault","Filter","onSelect","options","Object","values","onChange","target","colour","Home","useState","products","setProducts","All","colorFilter","setColorFilter","useEffect","axios","get","then","data","filteredProducts","Icon","icon","styles","Basket","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Plus","Minus","Checkout","aria-hidden","data-prefix","data-icon","CartProduct","parsed","parseInt","Cart","length","to","AppRouter","exact","path","Navbar","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.010cc2f1.chunk.js","sourcesContent":["export interface Product {\r\n    id: number;\r\n    colour: ProductColor;\r\n    name: string;\r\n    price: number;\r\n    img: string;\r\n}\r\n\r\nexport enum ProductColor {\r\n    All = 'All',\r\n    Black = 'Black',\r\n    Stone = 'Stone',\r\n    Red = 'Red',\r\n}\r\n","export const PATH_HOME = '/';\r\nexport const PATH_CART = '/cart';\r\n","import React, { Dispatch, createContext, useReducer, useContext } from 'react';\r\n\r\nimport { Product } from './../types';\r\n\r\nexport interface CartItem {\r\n    product: Product;\r\n    quantity: number;\r\n}\r\n\r\nexport enum CartActionType {\r\n    AddToCart,\r\n    UpdateQuantity,\r\n    RemoveFromCart,\r\n}\r\n\r\ninterface AddToCartAction {\r\n    type: CartActionType.AddToCart;\r\n    payload: Product;\r\n}\r\n\r\ninterface UpdateQuantityAction {\r\n    type: CartActionType.UpdateQuantity;\r\n    payload: {\r\n        id: number;\r\n        quantity: number;\r\n    };\r\n}\r\n\r\ninterface RemoveFromCartAction {\r\n    type: CartActionType.RemoveFromCart;\r\n    payload: {\r\n        id: number;\r\n    };\r\n}\r\n\r\nexport type CartAction =\r\n    | AddToCartAction\r\n    | UpdateQuantityAction\r\n    | RemoveFromCartAction;\r\n\r\ninterface CartState {\r\n    items: CartItem[];\r\n    totalQuantity: number;\r\n    totalPrice: number;\r\n}\r\n\r\nconst initialCartState = {\r\n    items: [],\r\n    totalQuantity: 0,\r\n    totalPrice: 0,\r\n};\r\n\r\nexport const CartStateContext = createContext<CartState>(initialCartState);\r\nexport const CartDispatchContext = createContext<Dispatch<CartAction>>(\r\n    () => {},\r\n);\r\n\r\nexport function cartReducer(state: CartItem[], action: CartAction): CartItem[] {\r\n    switch (action.type) {\r\n        case CartActionType.AddToCart:\r\n            const existingItem = state.find(\r\n                (item) => item.product.id === action.payload.id,\r\n            );\r\n            if (existingItem) {\r\n                // If the item was in the cart already we will increment the qty by 1\r\n                const oldQty = existingItem.quantity;\r\n                const newState = [\r\n                    ...state.filter(\r\n                        (item) => item.product.id !== action.payload.id,\r\n                    ),\r\n                    {\r\n                        product: action.payload,\r\n                        quantity: oldQty + 1,\r\n                    },\r\n                ];\r\n\r\n                return newState;\r\n            }\r\n            return [...state, { product: action.payload, quantity: 1 }];\r\n\r\n        case CartActionType.UpdateQuantity:\r\n            return state.map((item) => {\r\n                if (item.product.id === action.payload.id) {\r\n                    item.quantity = action.payload.quantity;\r\n                }\r\n                return item;\r\n            });\r\n        case CartActionType.RemoveFromCart:\r\n            return state.filter((item) => {\r\n                return item.product.id !== action.payload.id;\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst CartContextProvider: React.FC = ({ children }) => {\r\n    const [state, dispatch] = useReducer(cartReducer, []);\r\n    const totalQuantity = state.reduce((acc, curr) => {\r\n        acc += curr.quantity;\r\n        return acc;\r\n    }, 0);\r\n    const totalPrice = state.reduce((acc, curr) => {\r\n        acc += curr.product.price * curr.quantity;\r\n        return acc;\r\n    }, 0);\r\n    const stateContextValue = {\r\n        items: state,\r\n        totalQuantity,\r\n        totalPrice: Math.round(totalPrice * 100) / 100,\r\n    };\r\n    return (\r\n        <CartStateContext.Provider value={stateContextValue}>\r\n            <CartDispatchContext.Provider value={dispatch}>\r\n                {children}\r\n            </CartDispatchContext.Provider>\r\n        </CartStateContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useCartStateContext = () => useContext(CartStateContext);\r\nexport const useCartDispatchContext = () => useContext(CartDispatchContext);\r\n\r\nexport default CartContextProvider;\r\n","import React from 'react';\r\n\r\nexport enum IconType {\r\n    Basket,\r\n    Plus,\r\n    Minus,\r\n    Checkout,\r\n}\r\n\r\ninterface IconProps {\r\n    icon: IconType;\r\n    styles?: string;\r\n}\r\n\r\nconst Icon: React.FC<IconProps> = ({ icon, styles }) => {\r\n    switch (icon) {\r\n        case IconType.Basket:\r\n            return (\r\n                <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                    className={styles}\r\n                    data-test=\"icon-basket\"\r\n                >\r\n                    <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\"\r\n                    />\r\n                </svg>\r\n            );\r\n        case IconType.Plus:\r\n            return (\r\n                <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                    className={styles}\r\n                    data-test=\"icon-plus\"\r\n                >\r\n                    <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\r\n                    />\r\n                </svg>\r\n            );\r\n        case IconType.Minus:\r\n            return (\r\n                <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                    className={styles}\r\n                    data-test=\"icon-minus\"\r\n                >\r\n                    <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M20 12H4\"\r\n                    />\r\n                </svg>\r\n            );\r\n        case IconType.Checkout:\r\n            return (\r\n                <svg\r\n                    aria-hidden=\"true\"\r\n                    data-prefix=\"far\"\r\n                    data-icon=\"credit-card\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 576 512\"\r\n                    className={styles}\r\n                    data-test=\"icon-checkout\"\r\n                >\r\n                    <path\r\n                        fill=\"currentColor\"\r\n                        d=\"M527.9 32H48.1C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48.1 48h479.8c26.6 0 48.1-21.5 48.1-48V80c0-26.5-21.5-48-48.1-48zM54.1 80h467.8c3.3 0 6 2.7 6 6v42H48.1V86c0-3.3 2.7-6 6-6zm467.8 352H54.1c-3.3 0-6-2.7-6-6V256h479.8v170c0 3.3-2.7 6-6 6zM192 332v40c0 6.6-5.4 12-12 12h-72c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h72c6.6 0 12 5.4 12 12zm192 0v40c0 6.6-5.4 12-12 12H236c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h136c6.6 0 12 5.4 12 12z\"\r\n                    />\r\n                </svg>\r\n            );\r\n        default:\r\n            return <></>;\r\n    }\r\n};\r\n\r\nexport default Icon;\r\n","import React from 'react';\r\n\r\nimport { Product } from '../types';\r\nimport {\r\n    useCartDispatchContext,\r\n    CartActionType,\r\n    useCartStateContext,\r\n} from './../contexts/cart';\r\n\r\ninterface ProductCardProps {\r\n    product: Product;\r\n}\r\n\r\nconst ProductCard: React.FC<ProductCardProps> = ({ product }) => {\r\n    const { items } = useCartStateContext();\r\n    const dispatch = useCartDispatchContext();\r\n    const productInCart = items.find(\r\n        (cartItem) => cartItem.product.id === product.id,\r\n    );\r\n    const qtyInCart = productInCart?.quantity;\r\n\r\n    const handleAddToCart = (ev: React.MouseEvent<HTMLButtonElement>) => {\r\n        ev.preventDefault();\r\n        dispatch({\r\n            type: CartActionType.AddToCart,\r\n            payload: product,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div\r\n            data-test=\"component-productcard\"\r\n            className=\"transition-all duration-150 flex w-full px-4 py-6 md:w-1/2 lg:w-1/3 \"\r\n        >\r\n            <div className=\"card flex flex-col  m-2 p-3 md:p-6 bg-white rounded-lg shadow-2xl\">\r\n                <div className=\"flex-grow\">\r\n                    <p className=\"text-2xl uppercase text-gray-900 font-bold\">\r\n                        {product.name}\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"md:my-5 relative\">\r\n                    <img\r\n                        src={product.img}\r\n                        alt={product.name}\r\n                        className=\"w-full object-cover object-center\"\r\n                        data-test=\"productcard-image\"\r\n                    />\r\n                    {qtyInCart && (\r\n                        <div className=\" absolute bottom-0 w-full bg-gray-900\">\r\n                            <p className=\"text-center text-gray-200 text-md my-1 pl-2\">\r\n                                You have {qtyInCart} in your cart!\r\n                            </p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"grid gap-10\">\r\n                    <div className=\"flex flex-col md:flex-row justify-between items-center text-gray-900\">\r\n                        <p className=\"font-bold text-xl\">£{product.price}</p>\r\n                        <button\r\n                            data-test=\"productcard-addtocart\"\r\n                            onClick={handleAddToCart}\r\n                            className=\"px-4 py-1 text-sm transition ease-in duration-200 uppercase rounded-md hover:bg-gray-800 hover:text-white border-2 border-gray-900 focus:outline-none\"\r\n                        >\r\n                            Add to cart\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductCard;\r\n","import React from 'react';\r\n\r\nimport { ProductColor } from '../types';\r\n\r\n/**\r\n * I wanted to make this a generic filter component\r\n * but decided to hardcode it to colours because of time\r\n */\r\n\r\ninterface FilterProps {\r\n    onSelect: (value: ProductColor) => void;\r\n}\r\n\r\nconst Filter: React.FC<FilterProps> = ({ onSelect }) => {\r\n    const options = Object.values(ProductColor);\r\n\r\n    return (\r\n        <div data-test=\"component-filter\">\r\n            <select\r\n                onChange={(ev) => onSelect(ev.target.value as ProductColor)}\r\n                data-test=\"filter-select\"\r\n                className=\"text-xl pt-1\"\r\n            >\r\n                {options.map((colour) => (\r\n                    <option\r\n                        key={colour}\r\n                        value={colour}\r\n                        data-test=\"filter-option\"\r\n                    >\r\n                        {colour}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Product, ProductColor } from '../types';\r\nimport { fetchProducts } from '../actions';\r\nimport ProductCard from './../components/ProductCard';\r\nimport Filter from './../components/Filter';\r\n\r\nconst Home: React.FC = () => {\r\n    const [products, setProducts] = useState<Product[]>([]);\r\n    const [colorFilter, setColorFilter] = useState<ProductColor>(\r\n        ProductColor.All,\r\n    );\r\n\r\n    useEffect(() => {\r\n        fetchProducts().then((products) => {\r\n            setProducts(products.data);\r\n        });\r\n    }, []);\r\n\r\n    let filteredProducts = products;\r\n\r\n    if (colorFilter !== ProductColor.All) {\r\n        filteredProducts = products.filter(\r\n            (product) => product.colour === colorFilter,\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div data-test=\"page-home\" className=\"container mx-auto mt-6\">\r\n            <div className=\"flex justify-between items-center mx-10 md:mx-0\">\r\n                <h2 className=\"text-3xl font-semibold text-gray-800 md:text-4xl\">\r\n                    Products\r\n                </h2>\r\n                <div className=\"flex items-center\">\r\n                    <span className=\"font-bold text-2xl pr-3\">Color:</span>\r\n                    <Filter onSelect={(colour) => setColorFilter(colour)} />\r\n                </div>\r\n            </div>\r\n            <div className=\"flex flex-row flex-wrap mx-auto\">\r\n                {filteredProducts.map((product) => (\r\n                    <ProductCard product={product} key={product.id} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import axios from 'axios';\r\n\r\nimport { Product } from './types';\r\n\r\nconst PRODUCTS_URL =\r\n    'https://my-json-server.typicode.com/benirvingplt/products/products';\r\n\r\nexport const fetchProducts = () => axios.get<Product[]>(PRODUCTS_URL);\r\n","import React from 'react';\r\n\r\nimport { CartActionType, useCartDispatchContext } from '../contexts/cart';\r\nimport { Product } from '../types';\r\nimport Icon, { IconType } from './Icon';\r\n\r\ninterface CartProductProps {\r\n    quantity: number;\r\n    product: Product;\r\n}\r\n\r\nconst CartProduct: React.FC<CartProductProps> = ({ quantity, product }) => {\r\n    const dispatch = useCartDispatchContext();\r\n\r\n    const handleRemoveItem = (ev: React.MouseEvent<HTMLButtonElement>) => {\r\n        dispatch({\r\n            type: CartActionType.RemoveFromCart,\r\n            payload: {\r\n                id: product.id,\r\n            },\r\n        });\r\n    };\r\n\r\n    const handleQtyChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = ev.target;\r\n        const parsed = parseInt(value);\r\n        if (parsed) {\r\n            dispatch({\r\n                type: CartActionType.UpdateQuantity,\r\n                payload: {\r\n                    id: product.id,\r\n                    quantity: parsed,\r\n                },\r\n            });\r\n        }\r\n    };\r\n    const handleQtyIncrement = (ev: React.MouseEvent<HTMLButtonElement>) => {\r\n        dispatch({\r\n            type: CartActionType.UpdateQuantity,\r\n            payload: {\r\n                id: product.id,\r\n                quantity: quantity + 1,\r\n            },\r\n        });\r\n    };\r\n\r\n    const handleQtyDecrement = (ev: React.MouseEvent<HTMLButtonElement>) => {\r\n        if (quantity === 1) {\r\n            dispatch({\r\n                type: CartActionType.RemoveFromCart,\r\n                payload: {\r\n                    id: product.id,\r\n                },\r\n            });\r\n            return;\r\n        }\r\n        dispatch({\r\n            type: CartActionType.UpdateQuantity,\r\n            payload: {\r\n                id: product.id,\r\n                quantity: quantity - 1,\r\n            },\r\n        });\r\n    };\r\n\r\n    return (\r\n        <tr data-test=\"component-cartproduct\">\r\n            <td className=\"hidden pb-4 md:table-cell\">\r\n                <img\r\n                    className=\"w-20 rounded\"\r\n                    src={product.img}\r\n                    alt={product.name}\r\n                    data-test=\"productcard-image\"\r\n                />\r\n            </td>\r\n            <td>\r\n                <p className=\"mb-2 md:ml-4\">\r\n                    {product.name}\r\n                    <span className=\"text-sm uppercase text-gray-400 pl-2\">\r\n                        {product.colour}\r\n                    </span>\r\n                </p>\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"text-gray-700 md:ml-4 hover:text-gray-500\"\r\n                    onClick={handleRemoveItem}\r\n                    data-test=\"cartproduct-removebutton\"\r\n                >\r\n                    <small>(Remove item)</small>\r\n                </button>\r\n            </td>\r\n            <td>\r\n                <div className=\"flex justify-end \">\r\n                    <div className=\"w-24 h-10 flex\">\r\n                        <button\r\n                            data-test=\"cartproduct-qty-dec\"\r\n                            onClick={handleQtyDecrement}\r\n                        >\r\n                            <Icon\r\n                                icon={IconType.Minus}\r\n                                styles=\"w-4 h-4 hover:text-gray-500 cursor-pointer\"\r\n                            />\r\n                        </button>\r\n                        <div className=\"relative flex flex-row w-full h-8 mx-2\">\r\n                            <input\r\n                                type=\"text\"\r\n                                value={quantity}\r\n                                className=\"w-full font-semibold text-center text-gray-700 bg-gray-200 outline-none focus:outline-none hover:text-black focus:text-black\"\r\n                                onChange={handleQtyChange}\r\n                                data-test=\"cartproduct-qty-input\"\r\n                            />\r\n                        </div>\r\n                        <button\r\n                            data-test=\"cartproduct-qty-inc\"\r\n                            onClick={handleQtyIncrement}\r\n                        >\r\n                            <Icon\r\n                                icon={IconType.Plus}\r\n                                styles=\"w-4 h-4 hover:text-gray-500 cursor-pointer\"\r\n                            />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td className=\"text-right\">\r\n                <span className=\"text-sm lg:text-base font-medium\">\r\n                    £{product.price}\r\n                </span>\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default CartProduct;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Icon, { IconType } from '../components/Icon';\r\n\r\nimport { useCartStateContext } from '../contexts/cart';\r\nimport CartProduct from './../components/CartProduct';\r\nimport { PATH_HOME } from './../constants/pageRoutes';\r\n\r\nconst Cart: React.FC = () => {\r\n    const { items, totalPrice } = useCartStateContext();\r\n\r\n    return (\r\n        <div data-test=\"page-cart\" className=\"container mx-auto mt-6\">\r\n            <div className=\"mx-10 md:mx-0\">\r\n                <h2 className=\"text-3xl font-semibold text-gray-800 md:text-4xl\">\r\n                    Cart\r\n                </h2>\r\n            </div>\r\n            {!items.length ? (\r\n                <div className=\"w-100 flex flex-col justify-center items-center mt-4\">\r\n                    <p data-test=\"cart-no-items\" className=\"text-xl\">\r\n                        You currently have no items in your basket!\r\n                    </p>\r\n\r\n                    <Link\r\n                        to={PATH_HOME}\r\n                        data-test=\"cart-link-home\"\r\n                        className=\"mt-2 text-blue-500 text-md\"\r\n                    >\r\n                        Click Here to view the products again!\r\n                    </Link>\r\n                </div>\r\n            ) : (\r\n                <div className=\"px-10\">\r\n                    <table className=\"w-full text-sm lg:text-base\">\r\n                        <thead>\r\n                            <tr className=\"h-12 uppercase\">\r\n                                <th className=\"hidden md:table-cell\"></th>\r\n                                <th className=\"text-left\">Product</th>\r\n                                <th className=\"text-right pl-5 lg:pl-0 pr-2\">\r\n                                    Quantity\r\n                                </th>\r\n                                <th className=\"text-right\">Price</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {items.map(({ product, quantity }) => {\r\n                                return (\r\n                                    <CartProduct\r\n                                        key={product.id}\r\n                                        quantity={quantity}\r\n                                        product={product}\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <div className=\"p-4 md:w-1/2 md:float-right justify-center flex flex-col items-right\">\r\n                        <div className=\"flex justify-between pt-4 border-b\">\r\n                            <div className=\"lg:px-4 lg:py-2 m-2 text-lg lg:text-xl font-bold text-center text-gray-800\">\r\n                                Total\r\n                            </div>\r\n                            <div className=\"lg:px-4 lg:py-2 m-2 lg:text-lg font-bold text-center text-gray-900\">\r\n                                £{totalPrice}\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <button className=\"float-right flex justify-center items-center px-10 py-3 mt-6 font-medium text-white uppercase bg-gray-800 rounded-full shadow hover:bg-gray-700 focus:shadow-outline focus:outline-none\">\r\n                                <Icon icon={IconType.Checkout} styles=\"w-8\" />\r\n                                <span className=\"ml-2 mt-5px\">\r\n                                    Procceed to checkout\r\n                                </span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport { PATH_CART, PATH_HOME } from './constants/pageRoutes';\r\nimport Home from './pages/Home';\r\nimport Cart from './pages/Cart';\r\n\r\nconst AppRouter: React.FC = ({ children }) => {\r\n    return (\r\n        <Router>\r\n            {children}\r\n            <Switch>\r\n                <Route exact path={PATH_HOME}>\r\n                    <Home />\r\n                </Route>\r\n                <Route path={PATH_CART}>\r\n                    <Cart />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useCartStateContext } from '../contexts/cart';\r\nimport { PATH_CART, PATH_HOME } from './../constants/pageRoutes';\r\nimport Icon, { IconType } from './Icon';\r\n\r\nconst Navbar: React.FC = () => {\r\n    const { totalQuantity } = useCartStateContext();\r\n\r\n    return (\r\n        <header data-test=\"component-navbar\" className=\"bg-gray-100\">\r\n            <nav className=\"container mx-auto flex items-center justify-between w-full text-gray-800 p-4\">\r\n                <Link\r\n                    to={PATH_HOME}\r\n                    data-test=\"navbar-link-home\"\r\n                    className=\"font-semibold text-3xl tracking-tight hover:text-gray-600\"\r\n                >\r\n                    PLT\r\n                </Link>\r\n                <div className=\"md:items-center md:w-auto flex\">\r\n                    <Link\r\n                        to={PATH_CART}\r\n                        data-test=\"navbar-link-cart\"\r\n                        className=\"block text-gray-800 mr-4 font-bold hover:text-gray-600\"\r\n                    >\r\n                        <Icon icon={IconType.Basket} styles=\"w-8 h-8 mx-auto\" />\r\n                        Cart {totalQuantity > 0 && `(${totalQuantity})`}\r\n                    </Link>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nimport AppRouter from './AppRouter';\r\nimport Navbar from './components/Navbar';\r\nimport CartContextProvider from './contexts/cart';\r\n\r\nfunction App() {\r\n    return (\r\n        <CartContextProvider>\r\n            <AppRouter>\r\n                <Navbar />\r\n            </AppRouter>\r\n        </CartContextProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}